version: 2.1
jobs:
  test:
    docker:
      - image: node:12
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Test
          command: yarn test

  deploy-staging:
    docker:
      - image: node:12
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: yarn install
      - run:
          name: Building staging site
          command: yarn build-staging
      - run:
          name: Deploy to staging
          command: |
            cp ./dist/index.html ./dist/200.html
            ./node_modules/surge/lib/cli.js --project ./dist --domain https://plasticwatch-dev.surge.sh

  deploy-production:
    docker:
      - image: node:12
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: yarn install
      - run:
          name: Building production site
          command: yarn build
      - run:
          name: Deploy to production
          command: |
            cp ./dist/index.html ./dist/200.html
            ./node_modules/surge/lib/cli.js --project ./dist --domain https://plasticwatch.surge.sh

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test
      - deploy-staging:
          requires:
            - test
          filters:
            branches:
              only: develop
      - deploy-production:
          requires:
            - test
          filters:
            branches:
              only: master
